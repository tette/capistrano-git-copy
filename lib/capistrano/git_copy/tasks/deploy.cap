namespace :git_copy do
  def git_copy_utility
    @git_copy_utility ||= Capistrano::GitCopy::Utility.new(self)
  end

  task :wrapper do; end

  desc 'Check that the repository is reachable'
  task check: :'git_copy:wrapper' do
    run_locally do
      git_copy_utility.check
    end
  end

  desc 'Clone the repo to the cache'
  task clone: :'git_copy:wrapper' do
    run_locally do
      if git_copy_utility.test
        info t(:mirror_exists, at: git_copy_utility.repo_path)
      else
        git_copy_utility.clone
      end
    end
  end

  desc 'Update the repo mirror to reflect the origin state'
  task update: :'git_copy:clone' do
    run_locally do
      within git_copy_utility.repo_path do
        git_copy_utility.update
      end
    end
  end

  desc 'Copy repo to releases'
  task create_release: :'git_copy:update' do
    run_locally do
      within git_copy_utility.repo_path do
        git_copy_utility.prepare_release
      end
    end

    on release_roles :all do
      git_copy_utility.release
    end
  end

  desc 'Determine the revision that will be deployed'
  task :set_current_revision do
    run_locally do
      within git_copy_utility.repo_path do
        set :current_revision, git_copy_utility.fetch_revision
      end
    end
  end

  desc 'Clean repo cache'
  task :cleanup do
    run_locally do
      git_copy_utility.cleanup
    end
  end
end
